"" + 1 + 0
Результат: "10"
Причина: оператор "+" и строка "" интерпретируется как сложение, второй операнд number,
         попытка привести 1 к строке даст "1", а 0 "0". далее конкатенация строк

"" - 1 + 0
Результат: -1
Причина: "" и оператор "-" интерпретируется как вычитание, из строк вычитать нельзя,
          поэтому происходит попытка преобразования "" к числу что дает 0, далее следует арифметическая операция

true + false
Результат: 1
Причина:  оператор "+" интерпретируется как сложение,
          попытка преобразования bool к числу -> true приводится к 1, false к 0

6 / "3"
Результат: 2
Причина: попытка разделить 6 оператором "/" на строку "3",
          на строку делить нельзя -> попытка превести строку "3" в число
          даст number === 3

"2" * "3"
Результат: 6
Причина: оператор "*" интерпретируется как умножение,
         строки умножать нельзя, идет попытка привести "2" к числу даст number === 2,
         "3" даст number === 3, далее арифметическая операция

4 + 5 + "px"
Результат: "9px"
Причина: 4 и оператор "+" 5, произойдет мат операция, сложение чисел -> получаем 9
         9 и оператор "+" "px" попытка привести к строке, так как нельзя складывать числа и строки
         произойдет конкатенация строк "9px"

"$" + 4 + 5
Результат: "$45"
Причина: "$" и оператор "+" 4, интерпретируется как конкатенация строк,
          так как нельзя складывать строки с числами произойдет попытка приведения 4 к строке,
          даст "4", получим "$4". далее интерпретируется как конкатенация строк,
          так как нельзя складывать строки с числами произойдет попытка приведения 5 к строке,
          даст "5", получим "$45"

"4" - 2
Результат: 2
Причина: строка "4" и оператор "-" интерпретируется как вычитание, из строк нельзя вычитать,
         попытка привести "4" к числу даст number === 4, далее далее арифметическая операция

"4px" - 2
Результат: NaN
Причина: строка "4px" и оператор "-" интерпретируется как вычитание, из строк нельзя вычитать,
         попытка привести "4" к числу даст NaN, далее далее арифметическая операция NaN - 2

7 / 0
Результат: Infinity
Причина: в JS можно делить на ноль и получать Infinity, полезно очень

"  -9  " + 5
Результат: "  -9   5"
Причина: строка "  -9  " и оператор "+" интерпретируется как сложение, интерпретируется
         как конкатенация строк, далее попытка привести number 5 к строке даст "5",
         далее конкатенация строк

null + 1
Результат: 1
Причина: null и оператор + интерпретируется как сложение, второй операнд number.
         произойдет попытка привести null к числу, это даст 0, далее арифметическая операция

undefined + 1
Результат: NaN
Причина: undefined и оператор "+" -> сложение, второй операнд number. идет попытка привести undefined к числу
         Попытка привести undefined к числу не даст результата. Итог нечисловое значение + number даст NaN

" \t \n" - 2
Результат: -2
Причина: оператор "-" и строка " \t \n" интерпретируется как вычитание, второй операнд number,
         попытка привести " \t \n" к числу даст 0, тк это пустая строка, далее арифметическая операция

//Бонус*: Самое главное никогда не заниматься такой дичью) что понаписана сверху и 0 проблем.